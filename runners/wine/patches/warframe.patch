From f2f196c179f71d103a6547820823c87691e395f6 Mon Sep 17 00:00:00 2001
From: gloriouseggroll <gloriouseggroll@gmail.com>
Date: Thu, 4 May 2017 01:24:57 -0400
Subject: [PATCH 1/1] revert changes that cause warframe mission
 loading/exiting crash

---
 dlls/d3d8/tests/device.c |  8 +++-----
 dlls/d3d9/tests/device.c |  8 +++-----
 dlls/wined3d/surface.c   | 18 ++++++++----------
 dlls/wined3d/utils.c     |  3 ---
 4 files changed, 14 insertions(+), 23 deletions(-)

diff --git a/dlls/d3d8/tests/device.c b/dlls/d3d8/tests/device.c
index 6b34ff18c2..308d15b1c8 100644
--- a/dlls/d3d8/tests/device.c
+++ b/dlls/d3d8/tests/device.c
@@ -7975,11 +7975,9 @@ static void test_miptree_layout(void)
     }
     formats[] =
     {
-        {D3DFMT_A8R8G8B8,             "D3DFMT_A8R8G8B8"},
-        {D3DFMT_A8,                   "D3DFMT_A8"},
-        {D3DFMT_L8,                   "D3DFMT_L8"},
-        {MAKEFOURCC('A','T','I','1'), "D3DFMT_ATI1"},
-        {MAKEFOURCC('A','T','I','2'), "D3DFMT_ATI2"},
+        {D3DFMT_A8R8G8B8, "D3DFMT_A8R8G8B8"},
+        {D3DFMT_A8,       "D3DFMT_A8"},
+        {D3DFMT_L8,       "D3DFMT_L8"},
     };
     static const struct
     {
diff --git a/dlls/d3d9/tests/device.c b/dlls/d3d9/tests/device.c
index 4da1653e9b..a1ee36e612 100644
--- a/dlls/d3d9/tests/device.c
+++ b/dlls/d3d9/tests/device.c
@@ -11224,11 +11224,9 @@ static void test_miptree_layout(void)
     }
     formats[] =
     {
-        {D3DFMT_A8R8G8B8,             "D3DFMT_A8R8G8B8"},
-        {D3DFMT_A8,                   "D3DFMT_A8"},
-        {D3DFMT_L8,                   "D3DFMT_L8"},
-        {MAKEFOURCC('A','T','I','1'), "D3DFMT_ATI1"},
-        {MAKEFOURCC('A','T','I','2'), "D3DFMT_ATI2"},
+        {D3DFMT_A8R8G8B8, "D3DFMT_A8R8G8B8"},
+        {D3DFMT_A8,       "D3DFMT_A8"},
+        {D3DFMT_L8,       "D3DFMT_L8"},
     };
     static const struct
     {
diff --git a/dlls/wined3d/surface.c b/dlls/wined3d/surface.c
index a02b6f2c19..7fb9e987cf 100644
--- a/dlls/wined3d/surface.c
+++ b/dlls/wined3d/surface.c
@@ -745,7 +745,8 @@ void wined3d_surface_upload_data(struct wined3d_surface *surface, const struct w
 
     if (format->flags[WINED3D_GL_RES_TYPE_TEX_2D] & WINED3DFMT_FLAG_COMPRESSED)
     {
-        unsigned int dst_row_pitch, dst_slice_pitch;
+        UINT row_length = wined3d_format_calculate_size(format, 1, update_w, 1, 1);
+        UINT row_count = (update_h + format->block_height - 1) / format->block_height;
         const BYTE *addr = data->addr;
         GLenum internal;
 
@@ -760,31 +761,28 @@ void wined3d_surface_upload_data(struct wined3d_surface *surface, const struct w
         else
             internal = format->glInternal;
 
-        wined3d_format_calculate_pitch(format, 1, update_w, update_h, &dst_row_pitch, &dst_slice_pitch);
-
         TRACE("Uploading compressed data, target %#x, level %u, layer %u, x %d, y %d, w %u, h %u, "
                 "format %#x, image_size %#x, addr %p.\n",
                 surface->texture_target, surface->texture_level, surface->texture_layer,
-                dst_point->x, dst_point->y, update_w, update_h, internal, dst_slice_pitch, addr);
+                dst_point->x, dst_point->y, update_w, update_h, internal, row_count * row_length, addr);
 
-        if (dst_row_pitch == src_pitch)
+        if (row_length == src_pitch)
         {
             if (surface->texture_target == GL_TEXTURE_2D_ARRAY)
             {
                 GL_EXTCALL(glCompressedTexSubImage3D(surface->texture_target, surface->texture_level,
                             dst_point->x, dst_point->y, surface->texture_layer, update_w, update_h, 1,
-                            internal, dst_slice_pitch, addr));
+                            internal, row_count * row_length, addr));
             }
             else
             {
                 GL_EXTCALL(glCompressedTexSubImage2D(surface->texture_target, surface->texture_level,
                             dst_point->x, dst_point->y, update_w, update_h,
-                            internal, dst_slice_pitch, addr));
+                            internal, row_count * row_length, addr));
             }
         }
         else
         {
-            UINT row_count = (update_h + format->block_height - 1) / format->block_height;
             UINT row, y;
 
             /* glCompressedTexSubImage2D() ignores pixel store state, so we
@@ -795,12 +793,12 @@ void wined3d_surface_upload_data(struct wined3d_surface *surface, const struct w
                 {
                     GL_EXTCALL(glCompressedTexSubImage3D(surface->texture_target, surface->texture_level,
                             dst_point->x, y, surface->texture_layer, update_w, format->block_height, 1,
-                            internal, dst_row_pitch, addr));
+                            internal, row_length, addr));
                 }
                 else
                 {
                     GL_EXTCALL(glCompressedTexSubImage2D(surface->texture_target, surface->texture_level,
-                            dst_point->x, y, update_w, format->block_height, internal, dst_row_pitch, addr));
+                            dst_point->x, y, update_w, format->block_height, internal, row_length, addr));
                 }
 
                 y += format->block_height;
diff --git a/dlls/wined3d/utils.c b/dlls/wined3d/utils.c
index bd83446b91..af5d261ab6 100644
--- a/dlls/wined3d/utils.c
+++ b/dlls/wined3d/utils.c
@@ -3721,9 +3721,6 @@ UINT wined3d_format_calculate_size(const struct wined3d_format *format, UINT ali
     if (format->id == WINED3DFMT_UNKNOWN)
         return 0;
 
-    if (format->flags[WINED3D_GL_RES_TYPE_TEX_2D] & WINED3DFMT_FLAG_BROKEN_PITCH)
-        return width * height * depth * format->byte_count;
-
     wined3d_format_calculate_pitch(format, alignment, width, height, &row_pitch, &slice_pitch);
 
     return slice_pitch * depth;
-- 
2.12.2

